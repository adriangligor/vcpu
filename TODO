virtual cpu - vom arithmetischen rechner zum computer

schritt für schritt rechner + instruction set entwickeln

1. arithmetik prozessor mit ans register (1 operation mit immediate werten, ans printen, integer)
2. instruction list (mehrere operationen mit ans und immediate werten, ans printen)
3. err register, critical exit (illegal conditions abfangen, err setzen, nop operation)
4. memory register (mehrere operationen mit ans/imm/mem werten, ans printen)
5. register und memory array (mehrere freie register, mehrere memory cells, ans printen)
6. branching instruction, instruction pointer (spezial: ans, ipr, generell: r1, r2..., mem[x])
7. peripherie, bus (bytes zu devices schicken können)
8. stdout device (bytes drucken können, ascii tabelle)
9. stdin device (bytes einlesen können)
10. simple language compiler (binary memory representation for instruction list, load program on boot)
11. simple language compiler (global vars, sub: goto+labels+goto_back, arithmetic expressions), compiles to memory dump (image)
12. floating point extension, memory extension and windowing
